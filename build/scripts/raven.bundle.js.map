{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "/ZeStuff/devel/liquid/h-client/node_modules/json-stringify-safe/stringify.js",
    "/ZeStuff/devel/liquid/h-client/node_modules/raven-js/src/configError.js",
    "/ZeStuff/devel/liquid/h-client/node_modules/raven-js/src/console.js",
    "/ZeStuff/devel/liquid/h-client/node_modules/raven-js/src/raven.js",
    "/ZeStuff/devel/liquid/h-client/node_modules/raven-js/src/utils.js",
    "/ZeStuff/devel/liquid/h-client/node_modules/raven-js/vendor/TraceKit/tracekit.js",
    "/ZeStuff/devel/liquid/h-client/node_modules/raven-js/src/singleton.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n",
    "'use strict';\n\nfunction RavenConfigError(message) {\n    this.name = 'RavenConfigError';\n    this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n",
    "'use strict';\n\nvar wrapMethod = function(console, level, callback) {\n    var originalConsoleLevel = console[level];\n    var originalConsole = console;\n\n    if (!(level in console)) {\n        return;\n    }\n\n    var sentryLevel = level === 'warn'\n        ? 'warning'\n        : level;\n\n    console[level] = function () {\n        var args = [].slice.call(arguments);\n\n        var msg = '' + args.join(' ');\n        var data = {level: sentryLevel, logger: 'console', extra: {'arguments': args}};\n        callback && callback(msg, data);\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n            // IE9 doesn't allow calling apply on console functions directly\n            // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n            Function.prototype.apply.call(\n                originalConsoleLevel,\n                originalConsole,\n                args\n            );\n        }\n    };\n};\n\nmodule.exports = {\n    wrapMethod: wrapMethod\n};\n",
    "/*global XDomainRequest:false*/\n'use strict';\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar RavenConfigError = require('./configError');\nvar utils = require('./utils');\nvar stringify = require('json-stringify-safe');\n\nvar isFunction = utils.isFunction;\nvar isUndefined = utils.isUndefined;\nvar isError = utils.isError;\nvar isEmptyObject = utils.isEmptyObject;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar parseUrl = utils.parseUrl;\nvar isString = utils.isString;\nvar fill = utils.fill;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n    dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n    return +new Date();\n}\n\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n    this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n    // Raven can run in contexts where there's no document (react-native)\n    this._hasDocument = typeof document !== 'undefined';\n    this._lastCapturedException = null;\n    this._lastEventId = null;\n    this._globalServer = null;\n    this._globalKey = null;\n    this._globalProject = null;\n    this._globalContext = {};\n    this._globalOptions = {\n        logger: 'javascript',\n        ignoreErrors: [],\n        ignoreUrls: [],\n        whitelistUrls: [],\n        includePaths: [],\n        crossOrigin: 'anonymous',\n        collectWindowErrors: true,\n        maxMessageLength: 0,\n        stackTraceLimit: 50,\n        autoBreadcrumbs: true\n    };\n    this._ignoreOnError = 0;\n    this._isRavenInstalled = false;\n    this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n    // capture references to window.console *and* all its methods first\n    // before the console plugin has a chance to monkey patch\n    this._originalConsole = window.console || {};\n    this._originalConsoleMethods = {};\n    this._plugins = [];\n    this._startTime = now();\n    this._wrappedBuiltIns = [];\n    this._breadcrumbs = [];\n    this._lastCapturedEvent = null;\n    this._keypressTimeout;\n    this._location = window.location;\n    this._lastHref = this._location && this._location.href;\n\n    for (var method in this._originalConsole) {  // eslint-disable-line guard-for-in\n      this._originalConsoleMethods[method] = this._originalConsole[method];\n    }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n    // Hardcode version string so that raven source can be loaded directly via\n    // webpack (using a build step causes webpack #1617). Grunt verifies that\n    // this value matches package.json during build.\n    //   See: https://github.com/getsentry/raven-js/issues/465\n    VERSION: '3.7.0',\n\n    debug: false,\n\n    TraceKit: TraceKit, // alias to TraceKit\n\n    /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Optional set of of global options [optional]\n     * @return {Raven}\n     */\n    config: function(dsn, options) {\n        var self = this;\n\n        if (this._globalServer) {\n                this._logDebug('error', 'Error: Raven has already been configured');\n            return this;\n        }\n        if (!dsn) return this;\n\n        // merge in options\n        if (options) {\n            each(options, function(key, value){\n                // tags and extra are special and need to be put into context\n                if (key === 'tags' || key === 'extra') {\n                    self._globalContext[key] = value;\n                } else {\n                    self._globalOptions[key] = value;\n                }\n            });\n        }\n\n        this.setDSN(dsn);\n\n        // \"Script error.\" is hard coded into browsers for errors that it can't read.\n        // this is the result of a script being pulled in from an external domain and CORS.\n        this._globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n        this._globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n        // join regexp rules into one big rule\n        this._globalOptions.ignoreErrors = joinRegExp(this._globalOptions.ignoreErrors);\n        this._globalOptions.ignoreUrls = this._globalOptions.ignoreUrls.length ? joinRegExp(this._globalOptions.ignoreUrls) : false;\n        this._globalOptions.whitelistUrls = this._globalOptions.whitelistUrls.length ? joinRegExp(this._globalOptions.whitelistUrls) : false;\n        this._globalOptions.includePaths = joinRegExp(this._globalOptions.includePaths);\n        this._globalOptions.maxBreadcrumbs = Math.max(0, Math.min(this._globalOptions.maxBreadcrumbs || 100, 100)); // default and hard limit is 100\n\n        var autoBreadcrumbDefaults = {\n            xhr: true,\n            console: true,\n            dom: true,\n            location: true\n        };\n\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n        if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n            autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n        } else if (autoBreadcrumbs !== false) {\n            autoBreadcrumbs = autoBreadcrumbDefaults;\n        }\n        this._globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n        TraceKit.collectWindowErrors = !!this._globalOptions.collectWindowErrors;\n\n        // return for chaining\n        return this;\n    },\n\n    /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n    install: function() {\n        var self = this;\n        if (this.isSetup() && !this._isRavenInstalled) {\n            TraceKit.report.subscribe(function () {\n                self._handleOnErrorStackInfo.apply(self, arguments);\n            });\n            this._instrumentTryCatch();\n            if (self._globalOptions.autoBreadcrumbs)\n                this._instrumentBreadcrumbs();\n\n            // Install all of the plugins\n            this._drainPlugins();\n\n            this._isRavenInstalled = true;\n        }\n\n        Error.stackTraceLimit = this._globalOptions.stackTraceLimit;\n        return this;\n    },\n\n    /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n    setDSN: function(dsn) {\n        var uri = this._parseDSN(dsn),\n          lastSlash = uri.path.lastIndexOf('/'),\n          path = uri.path.substr(1, lastSlash);\n\n        this._dsn = dsn;\n        this._globalKey = uri.user;\n        this._globalSecret = uri.pass && uri.pass.substr(1);\n        this._globalProject = uri.path.substr(lastSlash + 1);\n\n        this._globalServer = this._getGlobalServer(uri);\n\n        this._globalEndpoint = this._globalServer +\n            '/' + path + 'api/' + this._globalProject + '/store/';\n    },\n\n    /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n    context: function(options, func, args) {\n        if (isFunction(options)) {\n            args = func || [];\n            func = options;\n            options = undefined;\n        }\n\n        return this.wrap(options, func).apply(this, args);\n    },\n\n    /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} func A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n    wrap: function(options, func, _before) {\n        var self = this;\n        // 1 argument has been passed, and it's not a function\n        // so just return it\n        if (isUndefined(func) && !isFunction(options)) {\n            return options;\n        }\n\n        // options is optional\n        if (isFunction(options)) {\n            func = options;\n            options = undefined;\n        }\n\n        // At this point, we've passed along 2 arguments, and the second one\n        // is not a function either, so we'll just return the second argument.\n        if (!isFunction(func)) {\n            return func;\n        }\n\n        // We don't wanna wrap it twice!\n        try {\n            if (func.__raven__) {\n                return func;\n            }\n\n            // If this has already been wrapped in the past, return that\n            if (func.__raven_wrapper__ ){\n                return func.__raven_wrapper__ ;\n            }\n        } catch (e) {\n            // Just accessing custom props in some Selenium environments\n            // can cause a \"Permission denied\" exception (see raven-js#495).\n            // Bail on wrapping and return the function as-is (defers to window.onerror).\n            return func;\n        }\n\n        function wrapped() {\n            var args = [], i = arguments.length,\n                deep = !options || options && options.deep !== false;\n\n            if (_before && isFunction(_before)) {\n                _before.apply(this, arguments);\n            }\n\n            // Recursively wrap all of a function's arguments that are\n            // functions themselves.\n            while(i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n            try {\n                return func.apply(this, args);\n            } catch(e) {\n                self._ignoreNextOnError();\n                self.captureException(e, options);\n                throw e;\n            }\n        }\n\n        // copy over properties of the old function\n        for (var property in func) {\n            if (hasKey(func, property)) {\n                wrapped[property] = func[property];\n            }\n        }\n        wrapped.prototype = func.prototype;\n\n        func.__raven_wrapper__ = wrapped;\n        // Signal that this function has been wrapped already\n        // for both debugging and to prevent it to being wrapped twice\n        wrapped.__raven__ = true;\n        wrapped.__inner__ = func;\n\n        return wrapped;\n    },\n\n    /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n    uninstall: function() {\n        TraceKit.report.uninstall();\n\n        this._restoreBuiltIns();\n\n        Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n        this._isRavenInstalled = false;\n\n        return this;\n    },\n\n    /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n    captureException: function(ex, options) {\n        // If not an Error is passed through, recall as a message instead\n        if (!isError(ex)) {\n            return this.captureMessage(ex, objectMerge({\n                trimHeadFrames: 1,\n                stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\n            }, options));\n        }\n\n        // Store the raw exception object for potential debugging and introspection\n        this._lastCapturedException = ex;\n\n        // TraceKit.report will re-raise any exception passed to it,\n        // which means you have to wrap it in try/catch. Instead, we\n        // can wrap it here and only re-raise if TraceKit.report\n        // raises an exception different from the one we asked to\n        // report on.\n        try {\n            var stack = TraceKit.computeStackTrace(ex);\n            this._handleStackInfo(stack, options);\n        } catch(ex1) {\n            if(ex !== ex1) {\n                throw ex1;\n            }\n        }\n\n        return this;\n    },\n\n    /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n    captureMessage: function(msg, options) {\n        // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n        // early call; we'll error on the side of logging anything called before configuration since it's\n        // probably something you should see:\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n            return;\n        }\n\n        var data = objectMerge({\n            message: msg + ''  // Make sure it's actually a string\n        }, options);\n\n        if (options && options.stacktrace) {\n            var ex;\n            // create a stack trace from this point; just trim\n            // off extra frames so they don't include this function call (or\n            // earlier Raven.js library fn calls)\n            try {\n                throw new Error(msg);\n            } catch (ex1) {\n                ex = ex1;\n            }\n\n            // null exception name so `Error` isn't prefixed to msg\n            ex.name = null;\n\n            options = objectMerge({\n                // fingerprint on msg, not stack trace (legacy behavior, could be\n                // revisited)\n                fingerprint: msg,\n                trimHeadFrames: (options.trimHeadFrames || 0) + 1\n            }, options);\n\n            var stack = TraceKit.computeStackTrace(ex);\n            var frames = this._prepareFrames(stack, options);\n            data.stacktrace = {\n                // Sentry expects frames oldest to newest\n                frames: frames.reverse()\n            }\n        }\n\n        // Fire away!\n        this._send(data);\n\n        return this;\n    },\n\n    captureBreadcrumb: function (obj) {\n        var crumb = objectMerge({\n            timestamp: now() / 1000\n        }, obj);\n\n        this._breadcrumbs.push(crumb);\n        if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n            this._breadcrumbs.shift();\n        }\n        return this;\n    },\n\n    addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n        var pluginArgs = Array.prototype.slice.call(arguments, 1);\n\n        this._plugins.push([plugin, pluginArgs]);\n        if (this._isRavenInstalled) {\n            this._drainPlugins();\n        }\n\n        return this;\n    },\n\n    /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n    setUserContext: function(user) {\n        // Intentionally do not merge here since that's an unexpected behavior.\n        this._globalContext.user = user;\n\n        return this;\n    },\n\n    /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n    setExtraContext: function(extra) {\n        this._mergeContext('extra', extra);\n\n        return this;\n    },\n\n    /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n    setTagsContext: function(tags) {\n        this._mergeContext('tags', tags);\n\n        return this;\n    },\n\n    /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n    clearContext: function() {\n        this._globalContext = {};\n\n        return this;\n    },\n\n    /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n    getContext: function() {\n        // lol javascript\n        return JSON.parse(stringify(this._globalContext));\n    },\n\n\n    /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n    setEnvironment: function(environment) {\n        this._globalOptions.environment = environment;\n\n        return this;\n    },\n\n    /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n    setRelease: function(release) {\n        this._globalOptions.release = release;\n\n        return this;\n    },\n\n    /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n    setDataCallback: function(callback) {\n        var original = this._globalOptions.dataCallback;\n        this._globalOptions.dataCallback = isFunction(callback)\n          ? function (data) { return callback(data, original); }\n          : callback;\n\n        return this;\n    },\n\n    /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n    setShouldSendCallback: function(callback) {\n        var original = this._globalOptions.shouldSendCallback;\n        this._globalOptions.shouldSendCallback = isFunction(callback)\n            ? function (data) { return callback(data, original); }\n            : callback;\n\n        return this;\n    },\n\n    /**\n     * Override the default HTTP transport mechanism that transmits data\n     * to the Sentry server.\n     *\n     * @param {function} transport Function invoked instead of the default\n     *                             `makeRequest` handler.\n     *\n     * @return {Raven}\n     */\n    setTransport: function(transport) {\n        this._globalOptions.transport = transport;\n\n        return this;\n    },\n\n    /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n    lastException: function() {\n        return this._lastCapturedException;\n    },\n\n    /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n    lastEventId: function() {\n        return this._lastEventId;\n    },\n\n    /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n    isSetup: function() {\n        if (!this._hasJSON) return false;  // needs JSON support\n        if (!this._globalServer) {\n            if (!this.ravenNotConfiguredError) {\n              this.ravenNotConfiguredError = true;\n              this._logDebug('error', 'Error: Raven has not been configured.');\n            }\n            return false;\n        }\n        return true;\n    },\n\n    afterLoad: function () {\n        // TODO: remove window dependence?\n\n        // Attempt to initialize Raven on load\n        var RavenConfig = window.RavenConfig;\n        if (RavenConfig) {\n            this.config(RavenConfig.dsn, RavenConfig.config).install();\n        }\n    },\n\n    showReportDialog: function (options) {\n        if (!window.document) // doesn't work without a document (React native)\n            return;\n\n        options = options || {};\n\n        var lastEventId = options.eventId || this.lastEventId();\n        if (!lastEventId) {\n            throw new RavenConfigError('Missing eventId');\n        }\n\n        var dsn = options.dsn || this._dsn;\n        if (!dsn) {\n            throw new RavenConfigError('Missing DSN');\n        }\n\n        var encode = encodeURIComponent;\n        var qs = '';\n        qs += '?eventId=' + encode(lastEventId);\n        qs += '&dsn=' + encode(dsn);\n\n        var user = options.user || this._globalContext.user;\n        if (user) {\n            if (user.name)  qs += '&name=' + encode(user.name);\n            if (user.email) qs += '&email=' + encode(user.email);\n        }\n\n        var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = globalServer + '/api/embed/error-page/' + qs;\n        (document.head || document.body).appendChild(script);\n    },\n\n    /**** Private functions ****/\n    _ignoreNextOnError: function () {\n        var self = this;\n        this._ignoreOnError += 1;\n        setTimeout(function () {\n            // onerror should trigger before setTimeout\n            self._ignoreOnError -= 1;\n        });\n    },\n\n    _triggerEvent: function(eventType, options) {\n        // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n        var evt, key;\n\n        if (!this._hasDocument)\n            return;\n\n        options = options || {};\n\n        eventType = 'raven' + eventType.substr(0,1).toUpperCase() + eventType.substr(1);\n\n        if (document.createEvent) {\n            evt = document.createEvent('HTMLEvents');\n            evt.initEvent(eventType, true, true);\n        } else {\n            evt = document.createEventObject();\n            evt.eventType = eventType;\n        }\n\n        for (key in options) if (hasKey(options, key)) {\n            evt[key] = options[key];\n        }\n\n        if (document.createEvent) {\n            // IE9 if standards\n            document.dispatchEvent(evt);\n        } else {\n            // IE8 regardless of Quirks or Standards\n            // IE9 if quirks\n            try {\n                document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n            } catch(e) {\n                // Do nothing\n            }\n        }\n    },\n\n    /**\n     * Wraps addEventListener to capture UI breadcrumbs\n     * @param evtName the event name (e.g. \"click\")\n     * @returns {Function}\n     * @private\n     */\n    _breadcrumbEventHandler: function(evtName) {\n        var self = this;\n        return function (evt) {\n            // reset keypress timeout; e.g. triggering a 'click' after\n            // a 'keypress' will reset the keypress debounce so that a new\n            // set of keypresses can be recorded\n            self._keypressTimeout = null;\n\n            // It's possible this handler might trigger multiple times for the same\n            // event (e.g. event propagation through node ancestors). Ignore if we've\n            // already captured the event.\n            if (self._lastCapturedEvent === evt)\n                return;\n\n            self._lastCapturedEvent = evt;\n            var elem = evt.target;\n\n            var target;\n\n            // try/catch htmlTreeAsString because it's particularly complicated, and\n            // just accessing the DOM incorrectly can throw an exception in some circumstances.\n            try {\n                target = htmlTreeAsString(elem);\n            } catch (e) {\n                target = '<unknown>';\n            }\n\n            self.captureBreadcrumb({\n                category: 'ui.' + evtName, // e.g. ui.click, ui.input\n                message: target\n            });\n        };\n    },\n\n    /**\n     * Wraps addEventListener to capture keypress UI events\n     * @returns {Function}\n     * @private\n     */\n    _keypressEventHandler: function() {\n        var self = this,\n            debounceDuration = 1000; // milliseconds\n\n        // TODO: if somehow user switches keypress target before\n        //       debounce timeout is triggered, we will only capture\n        //       a single breadcrumb from the FIRST target (acceptable?)\n\n        return function (evt) {\n            var target = evt.target,\n                tagName = target && target.tagName;\n\n            // only consider keypress events on actual input elements\n            // this will disregard keypresses targeting body (e.g. tabbing\n            // through elements, hotkeys, etc)\n            if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA')\n                return;\n\n            // record first keypress in a series, but ignore subsequent\n            // keypresses until debounce clears\n            var timeout = self._keypressTimeout;\n            if (!timeout) {\n                self._breadcrumbEventHandler('input')(evt);\n            }\n            clearTimeout(timeout);\n            self._keypressTimeout = setTimeout(function () {\n               self._keypressTimeout = null;\n            }, debounceDuration);\n        };\n    },\n\n    /**\n     * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n     * @param to the originating URL\n     * @param from the target URL\n     * @private\n     */\n    _captureUrlChange: function(from, to) {\n        var parsedLoc = parseUrl(this._location.href);\n        var parsedTo = parseUrl(to);\n        var parsedFrom = parseUrl(from);\n\n        // because onpopstate only tells you the \"new\" (to) value of location.href, and\n        // not the previous (from) value, we need to track the value of the current URL\n        // state ourselves\n        this._lastHref = to;\n\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n            to = parsedTo.relative;\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n            from = parsedFrom.relative;\n\n        this.captureBreadcrumb({\n            category: 'navigation',\n            data: {\n                to: to,\n                from: from\n            }\n        });\n    },\n\n    /**\n     * Install any queued plugins\n     */\n    _instrumentTryCatch: function() {\n        var self = this;\n\n        var wrappedBuiltIns = self._wrappedBuiltIns;\n\n        function wrapTimeFn(orig) {\n            return function (fn, t) { // preserve arity\n                // Make a copy of the arguments to prevent deoptimization\n                // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n                var args = new Array(arguments.length);\n                for(var i = 0; i < args.length; ++i) {\n                    args[i] = arguments[i];\n                }\n                var originalCallback = args[0];\n                if (isFunction(originalCallback)) {\n                    args[0] = self.wrap(originalCallback);\n                }\n\n                // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n                // also supports only two arguments and doesn't care what this is, so we\n                // can just call the original function directly.\n                if (orig.apply) {\n                    return orig.apply(this, args);\n                } else {\n                    return orig(args[0], args[1]);\n                }\n            };\n        }\n\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n        function wrapEventTarget(global) {\n            var proto = window[global] && window[global].prototype;\n            if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n                fill(proto, 'addEventListener', function(orig) {\n                    return function (evtName, fn, capture, secure) { // preserve arity\n                        try {\n                            if (fn && fn.handleEvent) {\n                                fn.handleEvent = self.wrap(fn.handleEvent);\n                            }\n                        } catch (err) {\n                            // can sometimes get 'Permission denied to access property \"handle Event'\n                        }\n\n                        // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n                        // so that we don't have more than one wrapper function\n                        var before;\n                        if (autoBreadcrumbs && autoBreadcrumbs.dom && (global === 'EventTarget' || global === 'Node')) {\n                            if (evtName === 'click'){\n                                before = self._breadcrumbEventHandler(evtName);\n                            } else if (evtName === 'keypress') {\n                                before = self._keypressEventHandler();\n                            }\n                        }\n                        return orig.call(this, evtName, self.wrap(fn, undefined, before), capture, secure);\n                    };\n                }, wrappedBuiltIns);\n                fill(proto, 'removeEventListener', function (orig) {\n                    return function (evt, fn, capture, secure) {\n                        try {\n                            fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__  : fn);\n                        } catch (e) {\n                            // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n                        }\n                        return orig.call(this, evt, fn, capture, secure);\n                    };\n                }, wrappedBuiltIns);\n            }\n        }\n\n        fill(window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n        fill(window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n        if (window.requestAnimationFrame) {\n            fill(window, 'requestAnimationFrame', function (orig) {\n                return function (cb) {\n                    return orig(self.wrap(cb));\n                };\n            }, wrappedBuiltIns);\n        }\n\n        // event targets borrowed from bugsnag-js:\n        // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n        var eventTargets = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n        for (var i = 0; i < eventTargets.length; i++) {\n            wrapEventTarget(eventTargets[i]);\n        }\n\n        var $ = window.jQuery || window.$;\n        if ($ && $.fn && $.fn.ready) {\n            fill($.fn, 'ready', function (orig) {\n                return function (fn) {\n                    return orig.call(this, self.wrap(fn));\n                };\n            }, wrappedBuiltIns);\n        }\n    },\n\n\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - XMLHttpRequests\n     *  - DOM interactions (click/typing)\n     *  - window.location changes\n     *  - console\n     *\n     * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n     */\n    _instrumentBreadcrumbs: function () {\n        var self = this;\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n        var wrappedBuiltIns = self._wrappedBuiltIns;\n\n        function wrapProp(prop, xhr) {\n            if (prop in xhr && isFunction(xhr[prop])) {\n                fill(xhr, prop, function (orig) {\n                    return self.wrap(orig);\n                }); // intentionally don't track filled methods on XHR instances\n            }\n        }\n\n        if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in window) {\n            var xhrproto = XMLHttpRequest.prototype;\n            fill(xhrproto, 'open', function(origOpen) {\n                return function (method, url) { // preserve arity\n\n                    // if Sentry key appears in URL, don't capture\n                    if (isString(url) && url.indexOf(self._globalKey) === -1) {\n                        this.__raven_xhr = {\n                            method: method,\n                            url: url,\n                            status_code: null\n                        };\n                    }\n\n                    return origOpen.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n\n            fill(xhrproto, 'send', function(origSend) {\n                return function (data) { // preserve arity\n                    var xhr = this;\n\n                    function onreadystatechangeHandler() {\n                        if (xhr.__raven_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n                            try {\n                                // touching statusCode in some platforms throws\n                                // an exception\n                                xhr.__raven_xhr.status_code = xhr.status;\n                            } catch (e) { /* do nothing */ }\n                            self.captureBreadcrumb({\n                                type: 'http',\n                                category: 'xhr',\n                                data: xhr.__raven_xhr\n                            });\n                        }\n                    }\n\n                    var props = ['onload', 'onerror', 'onprogress'];\n                    for (var j = 0; j < props.length; j++) {\n                        wrapProp(props[j], xhr);\n                    }\n\n                    if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n                        fill(xhr, 'onreadystatechange', function (orig) {\n                            return self.wrap(orig, undefined, onreadystatechangeHandler);\n                        } /* intentionally don't track this instrumentation */);\n                    } else {\n                        // if onreadystatechange wasn't actually set by the page on this xhr, we\n                        // are free to set our own and capture the breadcrumb\n                        xhr.onreadystatechange = onreadystatechangeHandler;\n                    }\n\n                    return origSend.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n        }\n\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        if (autoBreadcrumbs.dom && this._hasDocument) {\n            if (document.addEventListener) {\n                document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n                document.addEventListener('keypress', self._keypressEventHandler(), false);\n            }\n            else {\n                // IE8 Compatibility\n                document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n                document.attachEvent('onkeypress', self._keypressEventHandler());\n            }\n        }\n\n        // record navigation (URL) changes\n        // NOTE: in Chrome App environment, touching history.pushState, *even inside\n        //       a try/catch block*, will cause Chrome to output an error to console.error\n        // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n        var chrome = window.chrome;\n        var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n        var hasPushState = !isChromePackagedApp && window.history && history.pushState;\n        if (autoBreadcrumbs.location && hasPushState) {\n            // TODO: remove onpopstate handler on uninstall()\n            var oldOnPopState = window.onpopstate;\n            window.onpopstate = function () {\n                var currentHref = self._location.href;\n                self._captureUrlChange(self._lastHref, currentHref);\n\n                if (oldOnPopState) {\n                    return oldOnPopState.apply(this, arguments);\n                }\n            };\n\n            fill(history, 'pushState', function (origPushState) {\n                // note history.pushState.length is 0; intentionally not declaring\n                // params to preserve 0 arity\n                return function (/* state, title, url */) {\n                    var url = arguments.length > 2 ? arguments[2] : undefined;\n\n                    // url argument is optional\n                    if (url) {\n                        // coerce to string (this is what pushState does)\n                        self._captureUrlChange(self._lastHref, url + '');\n                    }\n\n                    return origPushState.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n        }\n\n        if (autoBreadcrumbs.console && 'console' in window && console.log) {\n            // console\n            var consoleMethodCallback = function (msg, data) {\n                self.captureBreadcrumb({\n                    message: msg,\n                    level: data.level,\n                    category: 'console'\n                });\n            };\n\n            each(['debug', 'info', 'warn', 'error', 'log'], function (_, level) {\n                wrapConsoleMethod(console, level, consoleMethodCallback);\n            });\n        }\n\n    },\n\n    _restoreBuiltIns: function () {\n        // restore any wrapped builtins\n        var builtin;\n        while (this._wrappedBuiltIns.length) {\n            builtin = this._wrappedBuiltIns.shift();\n\n            var obj = builtin[0],\n              name = builtin[1],\n              orig = builtin[2];\n\n            obj[name] = orig;\n        }\n    },\n\n    _drainPlugins: function() {\n        var self = this;\n\n        // FIX ME TODO\n        each(this._plugins, function(_, plugin) {\n            var installer = plugin[0];\n            var args = plugin[1];\n            installer.apply(self, [self].concat(args));\n        });\n    },\n\n    _parseDSN: function(str) {\n        var m = dsnPattern.exec(str),\n            dsn = {},\n            i = 7;\n\n        try {\n            while (i--) dsn[dsnKeys[i]] = m[i] || '';\n        } catch(e) {\n            throw new RavenConfigError('Invalid DSN: ' + str);\n        }\n\n        if (dsn.pass && !this._globalOptions.allowSecretKey) {\n            throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n        }\n\n        return dsn;\n    },\n\n    _getGlobalServer: function(uri) {\n        // assemble the endpoint from the uri pieces\n        var globalServer = '//' + uri.host +\n            (uri.port ? ':' + uri.port : '');\n\n        if (uri.protocol) {\n            globalServer = uri.protocol + ':' + globalServer;\n        }\n        return globalServer;\n    },\n\n    _handleOnErrorStackInfo: function() {\n        // if we are intentionally ignoring errors via onerror, bail out\n        if (!this._ignoreOnError) {\n            this._handleStackInfo.apply(this, arguments);\n        }\n    },\n\n    _handleStackInfo: function(stackInfo, options) {\n        var frames = this._prepareFrames(stackInfo, options);\n\n        this._triggerEvent('handle', {\n            stackInfo: stackInfo,\n            options: options\n        });\n\n        this._processException(\n            stackInfo.name,\n            stackInfo.message,\n            stackInfo.url,\n            stackInfo.lineno,\n            frames,\n            options\n        );\n    },\n\n    _prepareFrames: function(stackInfo, options) {\n        var self = this;\n        var frames = [];\n        if (stackInfo.stack && stackInfo.stack.length) {\n            each(stackInfo.stack, function(i, stack) {\n                var frame = self._normalizeFrame(stack);\n                if (frame) {\n                    frames.push(frame);\n                }\n            });\n\n            // e.g. frames captured via captureMessage throw\n            if (options && options.trimHeadFrames) {\n                for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n                    frames[j].in_app = false;\n                }\n            }\n        }\n        frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n        return frames;\n    },\n\n\n    _normalizeFrame: function(frame) {\n        if (!frame.url) return;\n\n        // normalize the frames data\n        var normalized = {\n            filename:   frame.url,\n            lineno:     frame.line,\n            colno:      frame.column,\n            'function': frame.func || '?'\n        };\n\n        normalized.in_app = !( // determine if an exception came from outside of our app\n            // first we check the global includePaths list.\n            !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) ||\n            // Now we check for fun, if the function name is Raven or TraceKit\n            /(Raven|TraceKit)\\./.test(normalized['function']) ||\n            // finally, we do a last ditch effort and check for raven.min.js\n            /raven\\.(min\\.)?js$/.test(normalized.filename)\n        );\n\n        return normalized;\n    },\n\n    _processException: function(type, message, fileurl, lineno, frames, options) {\n        var stacktrace;\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(message)) return;\n\n        message += '';\n\n        if (frames && frames.length) {\n            fileurl = frames[0].filename || fileurl;\n            // Sentry expects frames oldest to newest\n            // and JS sends them as newest to oldest\n            frames.reverse();\n            stacktrace = {frames: frames};\n        } else if (fileurl) {\n            stacktrace = {\n                frames: [{\n                    filename: fileurl,\n                    lineno: lineno,\n                    in_app: true\n                }]\n            };\n        }\n\n        if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) return;\n        if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) return;\n\n        var data = objectMerge({\n            // sentry.interfaces.Exception\n            exception: {\n                values: [{\n                    type: type,\n                    value: message,\n                    stacktrace: stacktrace\n                }]\n            },\n            culprit: fileurl\n        }, options);\n\n        // Fire away!\n        this._send(data);\n    },\n\n    _trimPacket: function(data) {\n        // For now, we only want to truncate the two different messages\n        // but this could/should be expanded to just trim everything\n        var max = this._globalOptions.maxMessageLength;\n        if (data.message) {\n            data.message = truncate(data.message, max);\n        }\n        if (data.exception) {\n            var exception = data.exception.values[0];\n            exception.value = truncate(exception.value, max);\n        }\n\n        return data;\n    },\n\n    _getHttpData: function() {\n        if (!this._hasDocument || !document.location || !document.location.href) {\n            return;\n        }\n\n        var httpData = {\n            headers: {\n                'User-Agent': navigator.userAgent\n            }\n        };\n\n        httpData.url = document.location.href;\n\n        if (document.referrer) {\n            httpData.headers.Referer = document.referrer;\n        }\n\n        return httpData;\n    },\n\n\n    _send: function(data) {\n        var globalOptions = this._globalOptions;\n\n        var baseData = {\n            project: this._globalProject,\n            logger: globalOptions.logger,\n            platform: 'javascript'\n        }, httpData = this._getHttpData();\n\n        if (httpData) {\n            baseData.request = httpData;\n        }\n\n        // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n        if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n        data = objectMerge(baseData, data);\n\n        // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n        data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n        data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n        // Send along our own collected metadata with extra\n        data.extra['session:duration'] = now() - this._startTime;\n\n        if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n            // intentionally make shallow copy so that additions\n            // to breadcrumbs aren't accidentally sent in this request\n            data.breadcrumbs = {\n                values: [].slice.call(this._breadcrumbs, 0)\n            };\n        }\n\n        // If there are no tags/extra, strip the key from the payload alltogther.\n        if (isEmptyObject(data.tags)) delete data.tags;\n\n        if (this._globalContext.user) {\n            // sentry.interfaces.User\n            data.user = this._globalContext.user;\n        }\n\n        // Include the environment if it's defined in globalOptions\n        if (globalOptions.environment) data.environment = globalOptions.environment;\n\n        // Include the release if it's defined in globalOptions\n        if (globalOptions.release) data.release = globalOptions.release;\n\n        // Include server_name if it's defined in globalOptions\n        if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n        if (isFunction(globalOptions.dataCallback)) {\n            data = globalOptions.dataCallback(data) || data;\n        }\n\n        // Why??????????\n        if (!data || isEmptyObject(data)) {\n            return;\n        }\n\n        // Check if the request should be filtered or not\n        if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n            return;\n        }\n\n        this._sendProcessedPayload(data);\n    },\n\n    _sendProcessedPayload: function(data, callback) {\n        var self = this;\n        var globalOptions = this._globalOptions;\n\n        // Send along an event_id if not explicitly passed.\n        // This event_id can be used to reference the error within Sentry itself.\n        // Set lastEventId after we know the error should actually be sent\n        this._lastEventId = data.event_id || (data.event_id = uuid4());\n\n        // Try and clean up the packet before sending by truncating long values\n        data = this._trimPacket(data);\n\n        this._logDebug('debug', 'Raven about to send:', data);\n\n        if (!this.isSetup()) return;\n\n        var auth = {\n            sentry_version: '7',\n            sentry_client: 'raven-js/' + this.VERSION,\n            sentry_key: this._globalKey\n        };\n        if (this._globalSecret) {\n            auth.sentry_secret = this._globalSecret;\n        }\n\n        var exception = data.exception && data.exception.values[0];\n        this.captureBreadcrumb({\n            category: 'sentry',\n            message: exception\n                ? (exception.type ? exception.type + ': ' : '') + exception.value\n                : data.message,\n            event_id: data.event_id,\n            level: data.level || 'error' // presume error unless specified\n        });\n\n        var url = this._globalEndpoint;\n        (globalOptions.transport || this._makeRequest).call(this, {\n            url: url,\n            auth: auth,\n            data: data,\n            options: globalOptions,\n            onSuccess: function success() {\n                self._triggerEvent('success', {\n                    data: data,\n                    src: url\n                });\n                callback && callback();\n            },\n            onError: function failure(error) {\n                self._triggerEvent('failure', {\n                    data: data,\n                    src: url\n                });\n                error = error || new Error('Raven send failed (no additional details provided)');\n                callback && callback(error);\n            }\n        });\n    },\n\n    _makeRequest: function(opts) {\n        var request = new XMLHttpRequest();\n\n        // if browser doesn't support CORS (e.g. IE7), we are out of luck\n        var hasCORS =\n            'withCredentials' in request ||\n            typeof XDomainRequest !== 'undefined';\n\n        if (!hasCORS) return;\n\n        var url = opts.url;\n        function handler() {\n            if (request.status === 200) {\n                if (opts.onSuccess) {\n                    opts.onSuccess();\n                }\n            } else if (opts.onError) {\n                opts.onError(new Error('Sentry error code: ' + request.status));\n            }\n        }\n\n        if ('withCredentials' in request) {\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                handler();\n            };\n        } else {\n            request = new XDomainRequest();\n            // xdomainrequest cannot go http -> https (or vice versa),\n            // so always use protocol relative\n            url = url.replace(/^https?:/, '');\n\n            // onreadystatechange not supported by XDomainRequest\n            request.onload = handler;\n        }\n\n        // NOTE: auth is intentionally sent as part of query string (NOT as custom\n        //       HTTP header) so as to avoid preflight CORS requests\n        request.open('POST', url + '?' + urlencode(opts.auth));\n        request.send(stringify(opts.data));\n    },\n\n    _logDebug: function(level) {\n        if (this._originalConsoleMethods[level] && this.debug) {\n            // In IE<10 console methods do not have their own 'apply' method\n            Function.prototype.apply.call(\n                this._originalConsoleMethods[level],\n                this._originalConsole,\n                [].slice.call(arguments, 1)\n            );\n        }\n    },\n\n    _mergeContext: function(key, context) {\n        if (isUndefined(context)) {\n            delete this._globalContext[key];\n        } else {\n            this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n        }\n    }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n",
    "/*eslint no-extra-parens:0*/\n'use strict';\n\nvar objectPrototype = Object.prototype;\n\nfunction isUndefined(what) {\n    return what === void 0;\n}\n\nfunction isFunction(what) {\n    return typeof what === 'function';\n}\n\nfunction isString(what) {\n    return objectPrototype.toString.call(what) === '[object String]';\n}\n\nfunction isObject(what) {\n    return typeof what === 'object' && what !== null;\n}\n\nfunction isEmptyObject(what) {\n    for (var _ in what) return false;  // eslint-disable-line guard-for-in, no-unused-vars\n    return true;\n}\n\n// Sorta yanked from https://github.com/joyent/node/blob/aa3b4b4/lib/util.js#L560\n// with some tiny modifications\nfunction isError(what) {\n    var toString = objectPrototype.toString.call(what);\n    return isObject(what) &&\n        toString === '[object Error]' ||\n        toString === '[object Exception]' || // Firefox NS_ERROR_FAILURE Exceptions\n        what instanceof Error;\n}\n\nfunction each(obj, callback) {\n    var i, j;\n\n    if (isUndefined(obj.length)) {\n        for (i in obj) {\n            if (hasKey(obj, i)) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    } else {\n        j = obj.length;\n        if (j) {\n            for (i = 0; i < j; i++) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    }\n}\n\nfunction objectMerge(obj1, obj2) {\n    if (!obj2) {\n        return obj1;\n    }\n    each(obj2, function(key, value){\n        obj1[key] = value;\n    });\n    return obj1;\n}\n\nfunction truncate(str, max) {\n    return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n    return objectPrototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n    // Combine an array of regular expressions and strings into one large regexp\n    // Be mad.\n    var sources = [],\n        i = 0, len = patterns.length,\n        pattern;\n\n    for (; i < len; i++) {\n        pattern = patterns[i];\n        if (isString(pattern)) {\n            // If it's a string, we need to escape it\n            // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n            sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n        } else if (pattern && pattern.source) {\n            // If it's a regexp already, we want to extract the source\n            sources.push(pattern.source);\n        }\n        // Intentionally skip other cases\n    }\n    return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n    var pairs = [];\n    each(o, function(key, value) {\n        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    });\n    return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) return {};\n\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        protocol: match[2],\n        host: match[4],\n        path: match[5],\n        relative: match[5] + query + fragment // everything minus origin\n    };\n}\nfunction uuid4() {\n    var crypto = window.crypto || window.msCrypto;\n\n    if (!isUndefined(crypto) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n\n        // set 4 in byte 7\n        arr[3] = arr[3] & 0xFFF | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        arr[4] = arr[4] & 0x3FFF | 0x8000;\n\n        var pad = function(num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = '0' + v;\n            }\n            return v;\n        };\n\n        return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) +\n        pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n    } else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0,\n                v = c === 'x' ? r : r&0x3|0x8;\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n    var MAX_TRAVERSE_HEIGHT = 5,\n        MAX_OUTPUT_LEN = 80,\n        out = [],\n        height = 0,\n        len = 0,\n        separator = ' > ',\n        sepLength = separator.length,\n        nextStr;\n\n    while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n\n        nextStr = htmlElementAsString(elem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || height > 1 && len + (out.length * sepLength) + nextStr.length >= MAX_OUTPUT_LEN) {\n            break;\n        }\n\n        out.push(nextStr);\n\n        len += nextStr.length;\n        elem = elem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n    var out = [],\n        className,\n        classes,\n        key,\n        attr,\n        i;\n\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push('#' + elem.id);\n    }\n\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(' ');\n        for (i = 0; i < classes.length; i++) {\n            out.push('.' + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push('[' + key + '=\"' + attr + '\"]');\n        }\n    }\n    return out.join('');\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n    var orig = obj[name];\n    obj[name] = replacement(orig);\n    if (track) {\n        track.push([obj, name, orig]);\n    }\n}\n\nmodule.exports = {\n    isUndefined: isUndefined,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isEmptyObject: isEmptyObject,\n    isError: isError,\n    each: each,\n    objectMerge: objectMerge,\n    truncate: truncate,\n    hasKey: hasKey,\n    joinRegExp: joinRegExp,\n    urlencode: urlencode,\n    uuid4: uuid4,\n    htmlTreeAsString: htmlTreeAsString,\n    htmlElementAsString: htmlElementAsString,\n    parseUrl: parseUrl,\n    fill: fill\n};\n",
    "'use strict';\n\nvar utils = require('../../src/utils');\n\nvar hasKey = utils.hasKey;\nvar isString = utils.isString;\nvar isUndefined = utils.isUndefined;\n\n/*\n TraceKit - Cross brower stack traces - github.com/occ/TraceKit\n MIT license\n*/\n\nvar TraceKit = {\n    collectWindowErrors: true,\n    debug: false\n};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:Uncaught (?:exception: )?)?((?:Eval|Internal|Range|Reference|Syntax|Type|URI)Error): ?(.*)$/;\n\nfunction getLocationHref() {\n    if (typeof document === 'undefined')\n        return '';\n\n    return document.location.href;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastArgs = null,\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Remove all crash handlers.\n     */\n    function unsubscribeAll() {\n        uninstallGlobalHandler();\n        handlers = [];\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (hasKey(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} colNo The column number at which the error\n     * occurred.\n     * @param {?Error} ex The actual Error object.\n     */\n    function traceKitWindowOnError(message, url, lineNo, colNo, ex) {\n        var stack = null;\n\n        if (lastExceptionStack) {\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        } else if (ex) {\n            // New chrome and blink send along a real error object\n            // Let's just report that like a normal error.\n            // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n            stack = TraceKit.computeStackTrace(ex);\n            notifyHandlers(stack, true);\n        } else {\n            var location = {\n                'url': url,\n                'line': lineNo,\n                'column': colNo\n            };\n\n            var name = undefined;\n            var msg = message; // must be new var or will modify original `arguments`\n            var groups;\n            if (isString(message)) {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n\n            location.func = UNKNOWN_FUNCTION;\n\n            stack = {\n                'name': name,\n                'message': msg,\n                'url': getLocationHref(),\n                'stack': [location]\n            };\n            notifyHandlers(stack, true);\n        }\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    function uninstallGlobalHandler ()\n    {\n        if (!_onErrorHandlerInstalled) {\n            return;\n        }\n        window.onerror = _oldOnerrorHandler;\n        _onErrorHandlerInstalled = false;\n        _oldOnerrorHandler = undefined;\n    }\n\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack,\n            _lastArgs = lastArgs;\n        lastArgs = null;\n        lastExceptionStack = null;\n        lastException = null;\n        notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\n     * Only used for window.onerror to not cause an infinite loop of\n     * rethrowing.\n     */\n    function report(ex, rethrow) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n              processLastException();\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        lastArgs = args;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        if (rethrow !== false) {\n            throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n        }\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    report.uninstall = unsubscribeAll;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (isUndefined(ex.stack) || !ex.stack) return;\n\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|<anonymous>).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\n                element = {\n                    'url': !isNative ? parts[2] : null,\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': isNative ? [parts[2]] : [],\n                    'line': parts[3] ? +parts[3] : null,\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ( parts = winjs.exec(lines[i]) ) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': [],\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : [],\n                    'line': parts[4] ? +parts[4] : null,\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (!stack[0].column && !isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = UNKNOWN_FUNCTION;\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'));\n              } catch (e) { }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref()\n        };\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n\n    return computeStackTrace;\n}());\n\nmodule.exports = TraceKit;\n",
    "/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\n'use strict';\n\nvar RavenConstructor = require('./raven');\n\nvar _Raven = window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function () {\n\twindow.Raven = _Raven;\n\treturn Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n"
  ]
}